name: MSBuild PROD

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  
  BUILD_CONFIGURATION: PROD
  
  VCPKG_DEFAULT_TRIPLET: 'x86-windows-static'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore from cache and install vcpkg
      # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
      uses: lukka/run-vcpkg@v10.2
      with:
        #vcpkgArguments: 'imgui imgui[glfw-binding] imgui[opengl3-gl3w-binding] imgui[win32-binding] nlohmann-json cryptopp curl polyhook2'
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        vcpkgGitCommitId: 'af2287382b1991dbdcb7e5112d236f3323b9dd7a' #TODO use submodules
        vcpkgJsonGlob: '**/vcpkg.json'
        runVcpkgInstall: true
    
    - name: Integrate vcpkg
      working-directory: ${{env.VCPKG_ROOT}}
      run: |
        vcpkg integrate install

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x86 ${{env.SOLUTION_FILE_PATH}} /p:VcpkgEnableManifest=true
      
    - name: Upload builds
      uses: actions/upload-artifact@v2
      with:
        name: '${{env.BUILD_CONFIGURATION}}'
        path: '${{ runner.workspace }}/DiscordTokenProtector/${{env.BUILD_CONFIGURATION}}/'
